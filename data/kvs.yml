- name: Slack
  link: https://api.slack.com/
  how: |
    Slack messages can contain attachments. These attachments can contain fields
    that can be used to store configuration data. Message bodies can also be used.
  limits: |
    Mostly covered by rate limits: https://api.slack.com/apis/rate-limits.
- name: Heroku Config Variables
  link: https://devcenter.heroku.com/articles/config-vars
  how: |
    Heroku provides a way to store configuration variables in the environment.
    These variables are accessible to your application and can be used to store
    sensitive information like API keys and passwords. No additional charge.
  limits: |
    100 apps * 64 kb = 6.4 MB of storage.
- name: DNS
  link: https://en.wikipedia.org/wiki/Domain_Name_System
  how: |
    Arbitrary data can be stored in DNS TXT records. This is a common way to store
    configuration data for services that are accessed via DNS.
  limits: |
    255 bytes per TXT record.  
    However many records you feel comfortable with in a zone file.
- name: AWS Resource Tags
  link: https://docs.aws.amazon.com/tag-editor/latest/userguide/best-practices-and-strats.html
  how: |
    AWS resources can be tagged with key-value pairs. These tags can be used to store
    configuration data for the resource.
  limits: |
    50 tags per resource. 128 characters per key, 256 characters per value. ~19 KB of data per tag set.
- name: GitHub Gists
  link: https://docs.github.com/en/rest/gists?apiVersion=2022-11-28
  how: |
    Gists can be used to store configuration data. They can be public or private.
  limits: |
    Unable to find any solid documented limits on Gists.
- name: GitHub Actions Variables
  link: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables
  how: |
    GitHub Actions can store configuration data in variables. Unlike secrets (which can't be read back out), variables can.
  limits: |
    [Limits are documented](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables#limits-for-configuration-variables).
    You can store up to 1,000 organization variables, 500 variables per repository, and 100 variables per environment. The total combined size limit for organization and repository variables is 256 KB per workflow run.
- name: Bluesky
  link: https://docs.bsky.app/docs/category/http-reference
  how: |
    Bluesky has a robust API for [creating posts](https://docs.bsky.app/docs/tutorials/creating-a-post) and [reading them back](https://docs.bsky.app/docs/api/app-bsky-feed-get-posts).
    This can be leveraged similar to the [Turla](https://www.securityweek.com/turla-malware-obtains-cc-address-instagram-comments/) malware group.
  limits: |
    [Rate limits](https://docs.bsky.app/docs/advanced-guides/rate-limits) are documented, on top of service limits.
- name: Kubernetes Annotations
  link: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  how: |
    Kubernetes objects can be annotated with key-value pairs. These annotations can be used to store configuration data.
  limits: |
    [Syntax for keys](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set) is documented.
    Total size limit is [256 KiB](https://github.com/kubernetes/kubernetes/blob/cf480a3a1a9cb22f3439c0a7922822d9f67f31b5/test/integration/controlplane/synthetic_controlplane_test.go#L341).
- name: Stripe Metadata
  link: https://docs.stripe.com/api/metadata
  how: |
    Stripe objects can be annotated with key-value pairs. Metadata can be used to do horrible things, like store application state(!).
  limits: |
    50 keys per object. 40 characters per key, 500 characters per value.
